# PlantUML Editor

@startuml Layeredrit



class LLAPI  #LightGreen{
    ONE CLASS FOR LL
    ALL LL FUNCTIONS
}

object MenuHandler #LightPink {
    //needs to handle what to print to screen and takes input
    //from user and knows when to send that input to other function
    userInput
    MenuDictionary //used to navigate menus, items: menu name, header, options etc.
}

object CreateNewInFile  #LightGreen{
    filePackage //comes as a dictionary where key is the filename
    //and the value is a list of lines from the file
    //so that you can work with multiple files at the same time
    newInfo
    ------------------------------------
    //function that creates a new line in a file
    IOAPI.DataPipe(fetch,[filenames])
    //code for adding a new line with correct fields
    IOAPI.DataPipe(return,[filenames],filePackage)
}

object Voyager  #LightGreen{
    staff supposed to go on Voyage
    employee schedule information
    -----------------------------------
    IOAPI.DataPipe(fetch,[filenames])
    //code for checking if staff is available(24 hour period)
    //check for staff containing two pilots and one attendant
    IOAPI.DataPipe(return,[filenames],filePackage)
}

object Viewer  #LightGreen{
    parameters(staff/voyages etc.)
    relevant information from filePackage
    filePackage
    ----------------------------------
    IOAPI.DataPipe(fetch,[filenames])
    //opens file based on input and prints out to screen
    //used for the list ALL of x thing
}

object specificEmployee  #LightGreen{
    parameters(SSN)
    employee SSN
    filePackage
    ----------------------------------
    IOAPI.DataPipe(fetch,[filenames])
    //go through all employees to find the matching SSN
}

object WorkSpecificDay  #LightGreen{
    parameters(day, working/away, destFlag)
    //can find either all employees not working on a day
    //and find all employees working and their destinations
    employee info
    voyage info
    filePackage
    ----------------------------------
    IOAPI.DataPipe(fetch,[filenames])
    //cross reference voyages with employees on specific day
    //to find a list of all employees not working that day
}

object VoyOfEmpSpeWeek #LightGreen{
    parameters(SSN, week)
    //finds all voyages an employee has been on in a given week
    employee info
    voyage info
    filePackage
    ----------------------------------
    IOAPI.DataPipe(fetch,[filenames])
    //first find all voyages in the given week
    //then check the voyages for that employee
}

class IOAPI #LightBlue{
    ONE CLASS FOR IO
    ALL IO FUNCTIONS
}

object OverWriter  #LightBlue{
    //takes care of new and updating as both require overwrites
    //finds the files and overwrites them with new info
    parameters ([filenames], filePackage)
    filenames
    filePackage
    ---------------------------------------------------
    //opens all files from [filenames] and overwrites them
    //with new info from the filePackage
}

object Opener  #LightBlue{
    //opens all files in  [filenames] and fetches all lines from file
    //makes a list of lines and puts them in dict with key:filenames,value:list of lines
    [filenames]
}

object DataPipe  #LightBlue{
    parameters(fetch/return, [filenames], filePackage = False)
    //based on fetch or return this either calls for Opener to fetch the filePackage
    //or it calls on overWriter to write the new data into files based on the filePackage
    fetch/return
    [filenames]
    //needs filepackage for the return version
    
} 
left to right direction
LLAPI --- CreateNewInFile
LLAPI --- Voyager
LLAPI --- Viewer
LLAPI --- specificEmployee
LLAPI --- WorkSpecificDay
LLAPI --- VoyOfEmpSpeWeek
LLAPI --- MenuHandler
IOAPI --- Opener
IOAPI --- OverWriter
IOAPI --- DataPipe
LLAPI --- DataPipe
@enduml